// Package gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package openapi

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerScopes = "bearer.Scopes"
)

// Error エラーモデル
type Error struct {
	// Code ステータスコード
	Code int `json:"code"`

	// Details エラーメッセージの詳細
	Details string `json:"details"`

	// Message エラーメッセージ
	Message string `json:"message"`
}

// Event イベントモデル
type Event struct {
	// Accepted 参加者数
	Accepted int `json:"accepted"`

	// Address 開催場所
	Address string `json:"address"`

	// Catch キャッチ
	Catch *string `json:"catch,omitempty"`

	// Description 概要
	Description *string `json:"description,omitempty"`

	// EndedAt イベント終了日時
	EndedAt time.Time `json:"endedAt"`

	// EventId イベントID
	EventId int `json:"eventId"`

	// EventType イベント参加タイプ
	// participation: connpassで参加受付あり
	// advertisement: 告知のみ
	EventType *string `json:"eventType,omitempty"`

	// EventUrl イベントURL
	EventUrl string `json:"eventUrl"`

	// Id uuid
	Id openapi_types.UUID `json:"id"`

	// Lat 開催会場の緯度
	Lat float64 `json:"lat"`

	// Limit 定員
	Limit int `json:"limit"`

	// Lon 開催会場の経度
	Lon float64 `json:"lon"`

	// Place 開催会場
	Place string `json:"place"`

	// Series グループ
	Series *struct {
		// Id グループID
		Id int `json:"id"`

		// Title グループタイトル
		Title string `json:"title"`

		// Url グループURL
		Url string `json:"url"`
	} `json:"series,omitempty"`

	// StartedAt イベント開催日時
	StartedAt time.Time `json:"startedAt"`

	// Title イベントタイトル
	Title string `json:"title"`

	// UpdatedAt イベント更新日時
	UpdatedAt time.Time `json:"updatedAt"`

	// Waiting 補欠者数
	Waiting int `json:"waiting"`
}

// Date defines model for date.
type Date = string

// EventId defines model for event_id.
type EventId = string

// Keyword defines model for keyword.
type Keyword = string

// SearchMethod defines model for search_method.
type SearchMethod = string

// N400BadRequest エラーモデル
type N400BadRequest = Error

// N401Unauthorized エラーモデル
type N401Unauthorized = Error

// N403Forbidden エラーモデル
type N403Forbidden = Error

// N404NotFound エラーモデル
type N404NotFound = Error

// N500InternalServerError エラーモデル
type N500InternalServerError = Error

// Mypage defines model for mypage.
type Mypage struct {
	// Image googleアカウントのアイコン画像
	Image *string `json:"image,omitempty"`

	// MarkedEvents ブックマークしたイベント
	MarkedEvents []Event `json:"markedEvents"`

	// Name 名前
	Name string `json:"name"`
}

// SearchEvent defines model for search_event.
type SearchEvent struct {
	// Events イベントリスト
	Events []Event `json:"events"`

	// ResultsReturned 含まれる検索結果の件数
	ResultsReturned float32 `json:"resultsReturned"`
}

// Bookmark defines model for bookmark.
type Bookmark struct {
	// Id eventsテーブルのid
	Id string `json:"id"`
}

// PutApiEventBookmarkJSONBody defines parameters for PutApiEventBookmark.
type PutApiEventBookmarkJSONBody struct {
	// Id eventsテーブルのid
	Id string `json:"id"`
}

// GetApiEventParams defines parameters for GetApiEvent.
type GetApiEventParams struct {
	// EventId イベント毎に割り当てられた番号
	EventId *EventId `form:"event_id,omitempty" json:"event_id,omitempty"`

	// Keyword キーワード
	Keyword *Keyword `form:"keyword,omitempty" json:"keyword,omitempty"`

	// SearchMethod 検索条件（ORもしくはAND）
	SearchMethod *SearchMethod `form:"search_method,omitempty" json:"search_method,omitempty"`

	// Date イベント開催日
	Date *Date `form:"date,omitempty" json:"date,omitempty"`
}

// GetApiMypageParams defines parameters for GetApiMypage.
type GetApiMypageParams struct {
	// Authorization Bearerトークンを受け取る
	Authorization *string `json:"Authorization,omitempty"`
}

// PutApiEventBookmarkJSONRequestBody defines body for PutApiEventBookmark for application/json ContentType.
type PutApiEventBookmarkJSONRequestBody PutApiEventBookmarkJSONBody
